% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/node.R
\name{Node}
\alias{Node}
\title{Node Class for cyTree}
\description{
A tree node used to annotate CyTOF cluster hierarchies. Each node contains a unique ID,
a name, marker metadata, and pointers to its parent and children.
}
\section{Public fields}{
\if{html}{\out{<div class="r6-fields">}}
\describe{
\item{\code{id}}{Character. Unique ID for the node.}

\item{\code{name}}{Character. Name/label of the node.}

\item{\code{parent}}{\code{Node} or \code{NULL}. Pointer to the parent node.}

\item{\code{children}}{List of \code{Node} objects. Direct children of this node.}

\item{\code{positive_markers}}{List. Names of markers considered positive.}

\item{\code{negative_markers}}{List. Names of markers considered negative.}
}
\if{html}{\out{</div>}}
}
\section{Methods}{
\subsection{Public methods}{
\itemize{
\item \href{#method-Node-new}{\code{Node$new()}}
\item \href{#method-Node-add_child}{\code{Node$add_child()}}
\item \href{#method-Node-get_path}{\code{Node$get_path()}}
\item \href{#method-Node-to_list}{\code{Node$to_list()}}
\item \href{#method-Node-print_node}{\code{Node$print_node()}}
\item \href{#method-Node-find_by_id}{\code{Node$find_by_id()}}
\item \href{#method-Node-find_by_name}{\code{Node$find_by_name()}}
\item \href{#method-Node-to_dataframes}{\code{Node$to_dataframes()}}
\item \href{#method-Node-get_children}{\code{Node$get_children()}}
\item \href{#method-Node-get_descendants}{\code{Node$get_descendants()}}
\item \href{#method-Node-clone}{\code{Node$clone()}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-Node-new"></a>}}
\if{latex}{\out{\hypertarget{method-Node-new}{}}}
\subsection{Method \code{new()}}{
Create a new Node
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{Node$new(
  id,
  name,
  parent = NULL,
  positive_markers = list(),
  negative_markers = list()
)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{id}}{Character. Unique ID for the node.}

\item{\code{name}}{Character. Name/label of the node.}

\item{\code{parent}}{Node or NULL. Parent node.}

\item{\code{positive_markers}}{List of marker names that are positive.}

\item{\code{negative_markers}}{List of marker names that are negative.}
}
\if{html}{\out{</div>}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-Node-add_child"></a>}}
\if{latex}{\out{\hypertarget{method-Node-add_child}{}}}
\subsection{Method \code{add_child()}}{
Add a child node
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{Node$add_child(child_node)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{child_node}}{A Node object to add as a child.}
}
\if{html}{\out{</div>}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-Node-get_path"></a>}}
\if{latex}{\out{\hypertarget{method-Node-get_path}{}}}
\subsection{Method \code{get_path()}}{
Get full path from root to this node
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{Node$get_path()}\if{html}{\out{</div>}}
}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-Node-to_list"></a>}}
\if{latex}{\out{\hypertarget{method-Node-to_list}{}}}
\subsection{Method \code{to_list()}}{
Recursively convert node and children to nested list
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{Node$to_list()}\if{html}{\out{</div>}}
}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-Node-print_node"></a>}}
\if{latex}{\out{\hypertarget{method-Node-print_node}{}}}
\subsection{Method \code{print_node()}}{
Print the node as a tree
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{Node$print_node(indent = 0)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{indent}}{Indentation level (for pretty printing)}
}
\if{html}{\out{</div>}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-Node-find_by_id"></a>}}
\if{latex}{\out{\hypertarget{method-Node-find_by_id}{}}}
\subsection{Method \code{find_by_id()}}{
Find a node by ID (first match)
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{Node$find_by_id(id)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{id}}{Character. ID to search for.}
}
\if{html}{\out{</div>}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-Node-find_by_name"></a>}}
\if{latex}{\out{\hypertarget{method-Node-find_by_name}{}}}
\subsection{Method \code{find_by_name()}}{
Find a node by name (first match)
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{Node$find_by_name(name)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{name}}{Character. Name to search for.}
}
\if{html}{\out{</div>}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-Node-to_dataframes"></a>}}
\if{latex}{\out{\hypertarget{method-Node-to_dataframes}{}}}
\subsection{Method \code{to_dataframes()}}{
Return data.frames of all nodes and edges
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{Node$to_dataframes()}\if{html}{\out{</div>}}
}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-Node-get_children"></a>}}
\if{latex}{\out{\hypertarget{method-Node-get_children}{}}}
\subsection{Method \code{get_children()}}{
Get direct children of a specified node by id or name
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{Node$get_children(id = NULL, name = NULL)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{id}}{Character. ID of the node whose children to return.}

\item{\code{name}}{Character. Name of the node whose children to return.}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
List of child Node objects, or NULL if the node is not found.
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-Node-get_descendants"></a>}}
\if{latex}{\out{\hypertarget{method-Node-get_descendants}{}}}
\subsection{Method \code{get_descendants()}}{
Get all descendant nodes of a specified node by id or name
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{Node$get_descendants(id = NULL, name = NULL)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{id}}{Character. ID of the node whose descendants to return.}

\item{\code{name}}{Character. Name of the node whose descendants to return.}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
List of descendant Node objects (all levels), or NULL if the node is not found.
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-Node-clone"></a>}}
\if{latex}{\out{\hypertarget{method-Node-clone}{}}}
\subsection{Method \code{clone()}}{
The objects of this class are cloneable with this method.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{Node$clone(deep = FALSE)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{deep}}{Whether to make a deep clone.}
}
\if{html}{\out{</div>}}
}
}
}
